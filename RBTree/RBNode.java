package RBTree;
/*
*定义红黑树的结点
*
* 引入：
* 二叉搜索树:如果树有左子树那么左孩子的结点值都比根小
*            如果树有右子树那么右孩子的结点值都比根大
*           它的左右子树也是二叉搜索树
* AVL树的特性是：任意结点其左子树与右子树的的高度最多差为1，空树为-1，这个差值也称为平衡因子。
*
* 红黑树(RBTree)是一种相比平衡二叉树(AVL)平衡要求较低的的一种二叉搜索树，
* 所谓平衡要求较低的意思是相比AVL树的每个节点的左右子树的高度差不能超过2,红黑树使用红黑两种颜色来标记二叉搜索树中的节点，
* 并对这种着色进行限制，使得在插入删除操作后对不符合的情况必须进行调整来保持这样一种限制，从而实现自我平衡。
*
*
* */
public class RBNode<T> {
    T element;//元素
    RBNode<T> right;//右孩子
    RBNode<T> left;//左孩子
    RBNode<T> parent;//父节点
    byte color;

    public RBNode(T x){
        this.element=x;

    }

}
